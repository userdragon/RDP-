name: Build Windows Sync Remote Control Suite

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]  # 版本标签触发正式发布
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # 获取完整历史用于版本号生成

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'  # 缓存依赖加速构建

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller setuptools wheel

    - name: Lint and test
      run: |
        pip install flake8 pytest
        # Windows专用PYTHONPATH设置
        $env:PYTHONPATH = "$($env:PYTHONPATH);$(Get-Location)"
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        pytest tests/ -v
      shell: pwsh

    - name: Get version
      id: get_version
      run: |
        if ($env:GITHUB_REF -like "refs/tags/v*") {
          $version = $env:GITHUB_REF -replace "refs/tags/v", ""
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8
        } else {
          $commitHash = git rev-parse --short HEAD
          echo "VERSION=dev-$commitHash" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8
        }
      shell: pwsh

    - name: Build executable with PyInstaller (Windows)
      run: |
        # Windows专用路径分隔符(;)
        pyinstaller --onefile --name=sync-remote-master `
          --add-data "src/resources/*;resources" `
          --icon=src/resources/icons/master_icon.ico `
          src/master.py
        
        pyinstaller --onefile --name=sync-remote-slave `
          --add-data "src/resources/*;resources" `
          --icon=src/resources/icons/slave_icon.ico `
          src/slave.py
      shell: pwsh

    - name: Package portable version
      run: |
        7z a -tzip sync-remote-suite-${{ env.VERSION }}-windows.zip dist/*
      shell: pwsh

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: sync-remote-suite-${{ env.VERSION }}-windows
        path: |
          sync-remote-suite-${{ env.VERSION }}-windows.zip
          dist/

  release:
    needs: build-windows
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: sync-remote-suite-${{ env.VERSION }}-windows
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/*.zip
          generate_release_notes: true
