name: Build Sync Remote Control Suite (Windows Only)

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest  # 只保留 Windows 环境
    strategy:
      matrix:
        # 移除多系统矩阵，只保留 Windows 配置
        os: [windows-latest]
        include:
          - os: windows-latest
            artifact-suffix: windows

    steps:
      # 以下步骤保持不变，与原配置一致
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller setuptools wheel

      - name: Lint and test
        run: |
          pip install flake8 pytest
          echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV
          flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
          pytest tests/ -v

      - name: Get version
        id: get_version
        run: |
          if ($env:GITHUB_REF -like 'refs/tags/v*') {
            $version = $env:GITHUB_REF -replace 'refs/tags/v', ''
          } else {
            $version = "dev-$(git rev-parse --short HEAD)"
          }
          echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Build executable with PyInstaller
        run: |
          # 构建主控端
          pyinstaller --onefile --name=sync-remote-master `
            --add-data "src/resources/*;resources" `  # Windows 用分号分隔路径
            --icon=src/resources/icons/master_icon.ico `
            src/master.py
          
          # 构建被控端
          pyinstaller --onefile --name=sync-remote-slave `
            --add-data "src/resources/*;resources" `  # Windows 用分号分隔路径
            --icon=src/resources/icons/slave_icon.ico `
            src/slave.py

      - name: Package portable version
        run: |
          7z a -tzip sync-remote-suite-${{ env.VERSION }}-windows.zip dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4  # 使用最新版本
        with:
          name: sync-remote-suite-${{ env.VERSION }}-windows
          path: |
            sync-remote-suite-${{ env.VERSION }}-windows.zip
            dist/

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4  # 使用最新版本
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*.zip
          generate_release_notes: true
